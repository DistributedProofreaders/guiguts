%scannoslist = (
'(<\w>)\s+' => '$1',
'(?<=\[)([^FSIG\d])' => '$1',
'([0-9]),([0-9]{4})' => '$1, $2',
'([^gG])uess' => '$1ness',
'([abimou])hl([ie])' => '$1bl$2',
'(\S)\s\s(\S)' => '$1 $2',
'(\b[A-Z])\.\s([A-Z])\.' => '$1.$2.',
',("?\n\s*"?\p{Upper})' => '.$1',
',("?\n{2,}\s*"?\p{Upper})' => '.$1',
',(?=\n\n)' => '.',
',(?=\s\p{IsUpper}\S)|,(?=\s[A-HJ-Z]\s)' => '.',
'<(\/?)(\p{IsUpper}+)>' => '<$1\L$2\E>',
'[b-df-hj-np-tv-xz]{5,}' => '',
'\.("?\n\s*"?\p{Lower})' => ',$1',
'\.(\s\p{IsLower})' => ',$1',
'\Bii' => 'll',
'(?!client)\b([csw])li([aeiou])' => '$1h$2',
'\b(\S+)\s\1\b' => '$1',
'\bhl' => 'bl',
'\bhr' => 'br',
'\brn' => 'm',
'\s\'$' => '\'',
'\s+(<\/\w>)' => '$1',
'^.{75,}' => '',
'cb' => 'ch',
'cl\b' => 'd',
'gbt' => 'ght',
'j(?<![\p{Alpha}\'])' => ';',
'mcnt' => 'ment',
'rn([bmp])' => 'm$1',
'tb' => 'th',
'tii' => 'th',
'tli' => 'th',
'v(?<!\p{Alpha})' => 'y',
'«[^»]+»\n?' => '',
'&c(,| |$)' => '&c.$1',
'^[!;:,.?]' => '',
'^-[^-]', => '',
'\t', => ' ',
'\xAD', => '-',
);

# For a hint, use the regex expression EXACTLY as it appears in the %scannoslist hash
# but replace the replacement term (heh) with the hint text. Note: if a single quote
# appears anywhere in the hint text, you'll need to escape it with a backslash. I.E. isn\'t
# I could have made this more compact by converting the scannoslist hash into a two dimensional
# hash, but would have sacrificed backward compatibility.

%reghints = (
'(<\w>)\s+' => 'Find HTML opening marker followed by whitespace and remove the whitespace.',
'(?<=\[)([^FSIG\d])' => 'Find an opening square bracket followed by anything but F, S, I, G or a number. (Footnote, Sidenote, Illustration, Greek.).',
'([0-9]),([0-9]{4})' => 'Find dates that are missing a space between the month and year, and add a space.',
'([^gG])uess' => 'Find the string "uess" not preceded by a g and change it to ness.',
'([abimou])hl([ie])' => 'Find a string that contains hl preceded by one of (a,b,i,m,o or u) and followed by i or e and change it to bl.',
'(\S)\s\s(\S)' => 'Find two white-space characters, surrounded by non white-space characters, and remove one of them.',
'(\b[A-Z])\.\s([A-Z])\.' => 'Find initials with a space between them and remove the space.',
',("?\n\s*"?\p{Upper})' => 'Find a comma at the end of a line with the next line starting with an upper case character.',
',("?\n{2,}\s*"?\p{Upper})' => 'Find a paragraph that ends in a comma and change the comma to a period.',
',(?=\n\n)' => 'Find a comma at the end of a paragraph and replace it with a period. (only valid for .34 and above.)',
',(?=\s\p{IsUpper}\S)|,(?=\s[A-HJ-Z]\s)' => 'Find a comma followed by a space and an upper-case character (except I) and replace with a period.',
'<(\/?)(\p{IsUpper}+)>' => 'Find upper-case HTML markup and convert it to lower-case.',
'[b-df-hj-np-tv-xz]{5,}' => 'Find a string containing at least 5 consonants in a row.',
'\.("?\n\s*"?\p{Lower})' => 'Find a full stop (period) with the following word starting with a lower case character and change the full stop to a comma.',
'\.(\s\p{IsLower})' => 'Find a period followed by a space and a lower-case letter and replace it with a comma.',
'\Bii' => 'Find the string ii not at the beginning of a word and change it to ll.',
'\b([csw])li([aeiou])' => 'Find a string that starts with one of c, s or w, li, then a vowel and change the li to h. Excluding client',
'\b(\S+)\s\1\b' => 'Find repeated words or word sequences and remove one.',
'\bhl' => 'Find a string that starts with hl and change it to bl.',
'\bhr' => 'Find a string that starts with hr and change it to br.',
'\brn' => 'Find a string that starts with rn and change it to m.',
'\s\'$' => 'Find a spaced single quote dangling on the end of a line.',
'\s+(<\/\w>)' => 'Find HTML closing marker preceded by whitespace and remove the whitespace.',
'^.{75,}' => 'Find long lines in the text. In this case, lines that contain more than 75 characters. Modify the number to to find lines with that many or more characters. (Gutcheck considers anything over 75 characters to be a long line.)',
'cb' => 'Find a string that contains cb and change it to ch.',
'cl\b' => 'Find a string that ends in cl and change it to d.',
'gbt' => 'Find a string that contains gbt and change it to ght.',
'j(?<![\p{Alpha}\]\')' => 'Find character strings that end with j and change the j to a semicolon.',
'mcnt' => 'Find a string containing mcnt and change it to ment.',
'rn([bmp])' => 'Find a string that contains rnb, rnm or rnp and change it to mb, mm or mp, respectively.',
'tb' => 'Find a string that contains tb and change it to th.',
'tii' => 'Find the character string tii and convert it to th.',
'tli' => 'Find a string that contains tli and change it to th.',
'v(?<!\p{Alpha})' => 'Find a string that ends with a v and change it to a y.',
'«[^»]+»\n?' => 'Find pairs of guillemots. The \\n assertion is not significant to the search for guillemots, it just activates the special search function that will search across lines. (Only going to work in .34 and above.)',
'&c(,| |$)' => 'Find the abreviation "&c." that doesn\'t have a period after it and insert one.',
'\t', => 'Replace tabs with single spaces.',
'\xAD', => 'Replace Soft Hyphens with Hyphens.',
);

