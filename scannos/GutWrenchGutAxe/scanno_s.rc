#Generated from axe2gui 0.2
#Generated from wrench2gui 0.1
#Gutaxe's scanno list
#Gutwrench's English scannos
#21 March 2006, JTN
#String matches
%scannoslist = (
'\'l1' => '\'ll',
' " ' => ' "',
'a. m.' => 'a.m.',
' c ' => ' © ',
'my clear' => 'my dear',
'Ju1' => 'Jul',
'{' => '[',
', Did ' => '. Did ',
'My clear' => 'My dear',
'Piddl' => 'Fiddl',
'rnrn' => 'mm',
'0ct' => 'Oct',
'bind leg' => 'hind leg',
'mcnt' => 'mont',
', Yo' => '. Yo',
' o ' => ' © ',
' 0,' => ' O,',
'o\'dock' => 'o\'clock',
'hble' => 'bble',
'\' ll' => '\'ll',
'`' => '\'',
'p. m.' => 'p.m.',
', Yes' => '. Yes',
', Every' => '. Every',
'i. e.' => 'i.e.',
' - ' => '-',
'gbt' => 'ght',
'hbli' => 'bbli',
', Many' => '. Many',
', Up ' => '. Up ',
', For ' => '. For ',
' \'ll' => '\'ll',
'-- ,' => '--,',
'}' => ']',
'"ll' => '\'ll',
' \' ' => ' \'',
'sha"n' => 'sha\'n',
', Her ' => '. Her ',
' . ' => '. ',
'et. al.' => 'et al.',
', With ' => '. With ',
'@' => '©',
'e. g.' => 'e.g.',
'Mile.' => 'Mlle.',
', Howev' => '. Howev',
', His' => '. His',
'-- .' => '--.',
', But ' => '. But ',
'Mlie.' => 'Mlle.',
'®' => '©',
', Some' => '. Some',
' "ll' => '\'ll',
', All ' => '. All ',
', Unti' => '. Unti',
'----' => '--',
', Also' => '. Also',
', \'Tis' => '. \'Tis',
' ....' => '....',
'how and arro' => 'bow and arro',
'per cent ' => 'per cent. ',
'hated' => '',
'balls' => '',
'hitch' => '',
'beats' => '',
'heads' => '',
'hutch' => '',
'hoots' => '',
'hooks' => '',
'bates' => '',
'heard' => '',
'bares' => '',
'bears' => '',
'beard' => '',
'hales' => '',
'hares' => '',
'bated' => '',
'borne' => '',
'barks' => '',
'books' => '',
'check' => '',
'beads' => '',
'hates' => '',
'bocks' => '',
'hocks' => '',
'harks' => '',
'hears' => '',
'board' => '',
'to he ' => '',
'cheek' => '',
'hatch' => '',
'eating' => '',
'heats' => '',
'bales' => '',
'hoard' => '',
'halls' => '',
);

%reghints = (
'\'l1' => 'one for el',
' " ' => 'close up space after quote',
'a. m.' => 'close up space in a.m.',
' c ' => '"c" for "copyright"',
'my clear' => 'stealth scanno',
'Ju1' => 'one for "el"',
'{' => 'brace for bracket',
', Did ' => 'comma for period',
'My clear' => 'stealth scanno',
'Piddl' => 'stealth scanno',
'rnrn' => 'scanno',
'0ct' => 'zero for "oh"',
'bind leg' => 'stealth scanno, "b" for "h"',
'mcnt' => 'scanno, "c" for "o"',
', Yo' => 'comma for period',
' o ' => '"o" for "copyright"',
' 0,' => 'zero for "O"',
'o\'dock' => 'stealth scanno',
'hble' => 'scanno',
'\' ll' => 'close up space after apostrophe',
'`' => 'grave accent for apostrophe',
'p. m.' => 'close up space in p.m.',
', Yes' => 'comma for period',
', Every' => 'comma for period',
'i. e.' => 'close up space in i.e.',
' - ' => 'close up spaces around hyphen',
'gbt' => 'scanno',
'hbli' => 'scanno',
', Many' => 'comma for period',
', Up ' => 'comma for period',
', For ' => 'comma for period',
' \'ll' => 'close up space before apostrophe',
'-- ,' => 'close up space after dash',
'}' => 'brace for bracket',
'"ll' => 'quote for apostrophe',
' \' ' => 'close up space after apostrophe',
'sha"n' => 'quote for apostrophe in "sha\'n\'t"',
', Her ' => 'comma for period',
' . ' => 'close up space before period',
'et. al.' => 'extra period after "et"',
', With ' => 'comma for period',
'@' => '"at" for "copyright"',
'e. g.' => 'close up space in e.g.',
'Mile.' => 'scanno',
', Howev' => 'comma for period',
', His' => 'comma for period',
'-- .' => 'close up space after dash',
', But ' => 'comma for period',
'Mlie.' => 'scanno',
'®' => '"registered" for "copyright"',
', Some' => 'comma for period',
' "ll' => 'quote for apostrophe & close up space',
', All ' => 'comma for period',
', Unti' => 'comma for period',
'----' => 'long dash too long',
', Also' => 'comma for period',
', \'Tis' => 'comma for period',
' ....' => 'close up space',
'how and arro' => 'stealth scanno, "how" for "bow"',
'per cent ' => 'missing period',
);

